# 做包子和吃包子同时发生，伪并发
import time

def CreateBz(name):
    e = EatBz('A')
    e2 = EatBz('B')
    e.__next__()
    e2.__next__()
    print('【%s】开始准备做包子了!' %name)
    for i in range(1,10,2):
        time.sleep(1)
        print('【%s】做了2个包子 ' %name)
        e.send(i)
        e2.send(i+1)

def EatBz(name):
    print('%s 准备吃包子了！' %name )
    while True:
        baozi = yield
        print('包子【%s】来了，被【%s】吃掉了！' %(baozi,name))

CreateBz('ALEX')

# #波菲纳妾数列，递归方法
# def fib(number):
#     reslut_num = 0
#     if number == 1 or number==2:
#         reslut_num = 1
#     else:
#         reslut_num = fib(number-1)+fib(number-2)
#     return reslut_num
# #非递归方法
# def fibNor(number):
#     listNum = []
#     listNum.__add__(0)
#     listNum[1]=1
#     i=2
#     for i in number:
#         listNum[i] = listNum[i-1] + listNum[i-2]
#     return listNum
#
# a=fibNor(2)
# print(a)